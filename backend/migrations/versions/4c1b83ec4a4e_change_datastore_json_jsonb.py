"""change datastore json -> jsonb

Revision ID: 4c1b83ec4a4e
Revises: e952e25d5b69
Create Date: 2025-06-09 13:29:07.413192

"""
from typing import Sequence, Union
# adding sqlmodel and pgvector so migrations can run without errors (module not found)
import sqlmodel
import pgvector
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4c1b83ec4a4e'
down_revision: Union[str, None] = 'e952e25d5b69'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('data_chatstore', 'value',
               existing_type=postgresql.ARRAY(postgresql.JSON(astext_type=sa.Text())),
               type_=sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())),
               existing_nullable=True)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('data_documents_embedding_idx'), 'data_documents', ['embedding'], unique=False, postgresql_with={'m': '16', 'ef_construction': '64'}, postgresql_using='hnsw')
    op.create_index(op.f('ix_data_chatstore_value'), 'data_chatstore', ['value'], unique=False)
    op.create_unique_constraint(op.f('data_chatstore:unique_key'), 'data_chatstore', ['key'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('data_chatstore:idx_key'), 'data_chatstore', ['key'], unique=False)
    op.alter_column('data_chatstore', 'value',
               existing_type=sa.ARRAY(postgresql.JSONB(astext_type=sa.Text())),
               type_=postgresql.ARRAY(postgresql.JSON(astext_type=sa.Text())),
               existing_nullable=True)
    # ### end Alembic commands ###
